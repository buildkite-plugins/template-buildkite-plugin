#!/bin/bash

set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/plugin.bash
. "$DIR/../lib/plugin.bash"

echo "--- :robot_face: ChatGPT Prompter Plugin"

# Validate required tools
validate_required_tools || exit 1

# Get required plugin configurations
echo "Retrieving OpenAI API Key ..."
# Read plugin configuration for OpenAI API Key
API_KEY_CONFIG=$(plugin_read_config API_KEY "")
# Evaluate the environment variable if it starts with $
if [[ "${API_KEY_CONFIG}" =~ ^\$ ]]; then
  API_KEY=$(eval "echo ${API_KEY_CONFIG}")
else
  API_KEY="${API_KEY_CONFIG}"
fi
# Trim any whitespace that might be causing issues
API_KEY=$(echo "$API_KEY" | tr -d '[:space:]')
 
if [ -z "${API_KEY}" ]; then
  echo '‚ùå Error: Missing OpenAI API Key. Please set the API_KEY in your plugin configuration.'
  exit 1
fi  


echo "Retrieving other plugin configurations ..."
# Load Plugin configuration
MODEL=$(plugin_read_config MODEL "gpt-4o-mini")
CUSTOM_PROMPT=$(plugin_read_config CUSTOM_PROMPT "")
BUILDKITE_API_TOKEN=$(get_bk_api_token)

echo "Using Model: ${MODEL}"
echo "Using Custom Prompt: ${CUSTOM_PROMPT:-}"

validate_bk_token "${BUILDKITE_API_TOKEN}" || exit 1

# Send the prompt to ChatGPT
echo "Sending build information to ChatGPT for analysis  ..."
send_prompt "${OPENAI_API_TOKEN}" "${MODEL}" "${CUSTOM_PROMPT}" "${BUILDKITE_API_TOKEN}"  
echo "~~~ Done."