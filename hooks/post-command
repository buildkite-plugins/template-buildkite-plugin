#!/bin/bash

set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/plugin.bash
. "$DIR/../lib/plugin.bash"

echo "--- :robot_face: ChatGPT Prompter Plugin"
echo "Retrieving OpenAI API Key ..."
OPENAI_API_SECRET_KEY=$(plugin_read_config API_TOKEN_SECRET_KEY "")

if [ -z "${OPENAI_API_SECRET_KEY}" ]; then
  echo '❌ Error: Missing Buildkite secret key. The OpenAI API Key is required for ChatGPT Prompter plugin'
  exit 1
fi

OPENAI_API_TOKEN=$(buildkite-agent secret get "${OPENAI_API_SECRET_KEY}")
if [ -z "${OPENAI_API_TOKEN}" ]; then
  echo "❌ Error: Failed to retrieve OpenAI API Key from Buildkite secret '$OPENAI_API_TOKEN'."
  return 1
fi 
echo "✅ OpenAI API Key retrieved successfully."

echo "Retrieving Buildkite API Token ..."
BK_TOKEN_SECRET_KEY=$(plugin_read_config BK_TOKEN_SECRET_KEY "")
if [ -z "${BK_TOKEN_SECRET_KEY}" ]; then
  echo '❌ Error: Missing Buildkite secret key. The BK API Key is required for ChatGPT Prompter plugin'
  exit 1
fi

BK_API_TOKEN=$(buildkite-agent secret get "${BK_TOKEN_SECRET_KEY}")
validate_bk_token "${BK_API_TOKEN}" || exit 1

echo "Retrieving other plugin configurations ..."

# Load Plugin configuration
MODEL=$(plugin_read_config MODEL "gpt-4o-mini")
if [ -z "${MODEL}" ]; then
  echo "❌ Error: Missing or invalid model configuration. Please set the MODEL in your plugin configuration."
  exit 1
fi

CUSTOM_PROMPT=$(plugin_read_config CUSTOM_PROMPT "") 

# Set the model environment variable

echo "✅ Model: ${MODEL}" 
if [ -n "${CUSTOM_PROMPT}" ]; then
  echo "✅ Custom Prompt: ${CUSTOM_PROMPT}"
fi

## Getting Build Information
echo "Retrieving Build Information ..."
BUILD_INFO=$(get_current_build_information "${BK_API_TOKEN}")
if [ -z "${BUILD_INFO}" ]; then
  echo "❌ Error: Failed to retrieve build information from Buildkite API. Please check the Buildkite API token and organization/pipeline configuration."
  exit 1
fi
echo "✅ Build Information retrieved successfully."

# Send the prompt to ChatGPT
echo "Sending build information to ChatGPT for analysis  ..."
send_prompt "${OPENAI_API_TOKEN}" "${MODEL}" "${CUSTOM_PROMPT}" "${BUILD_INFO}"  
echo "~~~ Done."