#!/bin/bash

set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/plugin.bash
. "$DIR/../lib/plugin.bash"

echo "--- :robot_face: ChatGPT Prompter Plugin"
echo "Verifying plugin parameters..."
OPENAI_API_SECRET_KEY=$(plugin_read_config API_TOKEN_SECRET_KEY "")

if [ -z "${OPENAI_API_SECRET_KEY}" ]; then
  echo '❌ Error: Missing Buildkite secret key. The OpenAI API Key is required for ChatGPT Prompter plugin'
  exit 1
fi

OPENAI_API_TOKEN=$(buildkite-agent secret get "${OPENAI_API_SECRET_KEY}")
if [ -z "${OPENAI_API_TOKEN}" ]; then
  echo "❌ Error: Failed to retrieve OpenAI API Key from Buildkite secret '$OPENAI_API_TOKEN'."
  return 1
fi 
echo "✅ OpenAI API Key retrieved successfully."

BK_API_SECRET_KEY=$(plugin_read_config BK_API_SECRET_KEY "")
if [ -z "${BK_API_SECRET_KEY}" ]; then
  echo '❌ Error: Missing Buildkite secret key. The BK API Key is required for ChatGPT Prompter plugin'
  exit 1
fi

BK_API_TOKEN=$(buildkite-agent secret get "${BK_API_SECRET_KEY}")
validate_bk_token "${BK_API_TOKEN}" || exit 1 


# Load Plugin configuration
MODEL=$(plugin_read_config MODEL "gpt-4o-mini")
if [ -z "${MODEL}" ]; then
  echo "❌ Error: Missing or invalid model configuration. Please set the MODEL in your plugin configuration."
  exit 1
fi

USER_PROMPT=$(plugin_read_config USER_PROMPT "ping")
SYSTEM_PROMPT=$(plugin_read_config SYSTEM_PROMPT "")

# Set the model environment variable

echo "✅ Model: ${MODEL}"
echo "✅ User Prompt: ${USER_PROMPT}"
if [ -n "${SYSTEM_PROMPT}" ]; then
  echo "✅ System Prompt: ${SYSTEM_PROMPT}"
fi

# Send the prompt to ChatGPT
send_prompt "${API_SECRET_KEY_VALUE}" "${MODEL}" "${USER_PROMPT}" "${SYSTEM_PROMPT}"
echo "~~~ Done."